# Notes from Coursera lectures

fhand = open('gword.js','w')
# that's how you open a file with the ability to write to it.

fhand.write("{text: '"+k+"', size: "+str(size)+"}")

#putting the variables "k" and "size" in between + allows you to write the variable values in the fhand.write() call.

# Notes from MIT lectures

Key parts of an algorithm:
 - Instructions
 - Flow of control
 - Termination condition
 
 History lesson: started with fixed-program computers and progressed to stored-program computers.
 Instructions are also data -> no distinction.  Once that was possible, programs could produce programs.
 
 Characteristics of a programming language:
 - Syntax: which sequences of characters and symbols constitute a well-formed string
 - Static Semantics: which well-formed strings have a meaning
 - Semantics: what that meaning is
 
 Python:
 - easy to learn.
 - less complicated than Java (but Java is better at weeding out bad values).
 - the most popular language in Biology and life sciences.
 - easier to debug than most languages.
 - interpreted rather than compiled language --> interpreted language can describe what went wrong in the language that you used to write the program.
 - why do we have compilers?  Typically, compiled languages are more efficient because they take an extra step of preparing the machine language.
 
 Lecture #2
 
 Python is built on objects.
 All objects have types.
 Two fundamental types: 
    scalar - indivisible, atoms of programming language
    non-scalar

    Scalar types: integer (int), float (float), boolean (bool), None (NoneType), string (str).  Note that floats are not the same as real numbers, but they are used to represent them.
        Literal = how you type it.
        Python does not have "char" type (one character), but has string instead.
        Literals of type string can be written with single or double quotes.  No difference.
        Expression is a sequence of operands (objects) and operators.
        "Overloaded" operators have a meaning that depends on the type of the operands.  Example: integer math vs. float math.

In Python, a variable is simply a name for an object.  An assignment statement in Python binds a name to an object.
The purpose of a comment is to make the program easier to read.  Comments should explain your thinking when you wrote the program.  What is the algorithm you're using.   
Program types:
- Straight line program = sequence of commands executed one after the other.
- Branching programs = governed by if/then statements.
- Recursive programs have looping constructs (iteration)
- Turing complete = a language that has     
Iteration provides a more complicated form of control.